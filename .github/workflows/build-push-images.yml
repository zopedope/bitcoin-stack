name: Build & Push Images

env:
  BUILD_TARGETS: linux/amd64,linux/arm64

on:
  push:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Import environment
        id: dotenv
        uses: falti/dotenv-action@v1

      - name: Prepare builds
        id: prepare
        run: |
          docker manifest inspect bitcoinstack/bitcoin:${{ steps.dotenv.outputs.bitcoin_version }}-alpine &>/dev/null || echo "bitcoin=${{ steps.dotenv.outputs.bitcoin_version }}-alpine" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/clightning:${{ steps.dotenv.outputs.clightning_version }}-alpine &>/dev/null || echo "clightning=${{ steps.dotenv.outputs.clightning_version }}-alpine" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/eclair:${{ steps.dotenv.outputs.eclair_version }} &>/dev/null || echo "eclair=${{ steps.dotenv.outputs.eclair_version }}" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/electrs:${{ steps.dotenv.outputs.electrs_version }}-alpine &>/dev/null || echo "electrs=${{ steps.dotenv.outputs.electrs_version }}-alpine" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/elements:${{ steps.dotenv.outputs.elements_version }}-alpine &>/dev/null || echo "elements=${{ steps.dotenv.outputs.elements_version }}-alpine" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/lnd:${{ steps.dotenv.outputs.lnd_version }}-alpine &>/dev/null || echo "lnd=${{ steps.dotenv.outputs.lnd_version }}-alpine" >> $GITHUB_ENV
          docker manifest inspect bitcoinstack/relay:${{ steps.dotenv.outputs.relay_version }} &>/dev/null || echo "relay=${{ steps.dotenv.outputs.relay_version }}" >> $GITHUB_ENV

      - name: Build and push Bitcoin
        if: env.bitcoin
        uses: docker/build-push-action@v3
        with:
          context: ./bitcoin
          build-args: BITCOIN_VERSION=${{ steps.dotenv.outputs.bitcoin_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/bitcoin:${{ env.bitcoin }}

      - name: Build and push Clightning
        if: env.clightning
        uses: docker/build-push-action@v3
        with:
          context: ./clightning
          build-args: CLIGHTNING_VERSION=${{ steps.dotenv.outputs.clightning_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/clightning:${{ env.clightning }}

      - name: Build and push Eclair
        if: env.eclair
        uses: docker/build-push-action@v3
        with:
          context: ./eclair
          build-args: ECLAIR_VERSION=${{ steps.dotenv.outputs.eclair_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/eclair:${{ env.eclair }}

      - name: Build and push Electrs
        if: env.electrs
        uses: docker/build-push-action@v3
        with:
          context: ./electrs
          build-args: ELECTRS_VERSION=${{ steps.dotenv.outputs.electrs_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/electrs:${{ env.electrs }}

      - name: Build and push Elements
        if: env.elements
        uses: docker/build-push-action@v3
        with:
          context: ./elements
          build-args: ELEMENTS_VERSION=${{ steps.dotenv.outputs.elements_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/elements:${{ env.elements }}

      - name: Build and push LND
        if: env.lnd
        uses: docker/build-push-action@v3
        with:
          context: ./lnd
          build-args: LND_VERSION=${{ steps.dotenv.outputs.lnd_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/lnd:${{ env.lnd }}

      - name: Build and push Relay
        if: env.relay
        uses: docker/build-push-action@v3
        with:
          context: ./relay
          build-args: RELAY_VERSION=${{ steps.dotenv.outputs.relay_version }}
          platforms: ${{ env.BUILD_TARGETS }}
          push: true
          tags: bitcoinstack/relay:${{ env.relay }}